#!/usr/bin/env bash

set -e

usage() {
  echo "$1 chain TARGET_ADDR [TARGET_PORT=443] [TARGET_NAME]"
  echo "$1 dates TARGET_ADDR [TARGET_PORT=443] [TARGET_NAME]"
  echo "$1 expire_timestamp TARGET_ADDR [TARGET_PORT=443] [TARGET_NAME]"
  echo "$1 docker_curl DOCKER_APT_IMAGE TARGET_ADDR [TARGET_PORT=443] [TARGET_NAME]"
}

my_chain() {
  echo | openssl s_client -showcerts -servername "${3:-${1}}" -connect "${1}:${2:-443}"
}
my_dates() {
  echo | openssl s_client -servername "${3:-${1}}" -connect "${1}:${2:-443}" | openssl x509 -noout -dates
}
my_docker_curl() {
  if ! docker image inspect "${1}-curl" 1>/dev/null 2>/dev/null || [ ! -z ${MY_DOCKER_REBUILD} ]; then
    # build image only when necessary
    my_docker_context="$(mktemp -d)"
    cat >"${my_docker_context}/Dockerfile" <<EOF
FROM "${1}"
RUN apt-get update 1>/dev/null 2>/dev/null && apt-get install --no-install-recommends -y curl ca-certificates 1>/dev/null 2>/dev/null

CMD ["--version"]
ENTRYPOINT ["curl"]
EOF
    docker image build -t "${1}-curl" "${my_docker_context}" 1>/dev/null 2>/dev/null &&
      rm "${my_docker_context}/Dockerfile" &&
      rmdir "${my_docker_context}"
  fi
  if [ ! -z "${4}" ]; then
    docker container run --rm "${1}-curl" -I -v https://${4}:${3:-443} --resolve ${4}:${3:-443}:${2}
  else
    docker container run --rm "${1}-curl" -I -v https://${2}:${3:-443}
  fi
}
case "$1" in
chain) my_chain "${@:2}" ;;
dates) my_dates "${@:2}" ;;
expire_timestamp) date -d "$(my_dates "${@:2}" 2>/dev/null | grep notAfter= | cut -d= -f2)" +"%s" ;;
docker_curl) my_docker_curl "${@:2}" ;;
*) usage "$0" ;;
esac
