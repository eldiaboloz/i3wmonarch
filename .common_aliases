
alias cdi3='cd $HOME/dev/i3wmonarch'
alias lsal="ls --color=never -al"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
[ "$EUID" -ne 0 ] && alias systemctl='systemctl --user'
[ "$EUID" -ne 0 ] && alias journalctl='journalctl --user'
[ "$EUID" -ne 0 ] && alias fix_kbd='$HOME/dev/i3wmonarch/scripts/i3wm/fix_keyboard.sh'

alias gpgc='gpg --cipher-algo AES256 --armor -c'
alias gpgd='gpg --decrypt'

alias snmap='nmap -T5 -sP'
alias stod="stod(){date '+%Y-%m-%d %H:%M:%S' -d \"@\${1}\"; unset -f stod;};stod"

alias humble='cat /storage/Dropbox/humble_bundle_extra_keys.txt | sed -n "1~3p"'
alias humble_e='$EDITOR /storage/Dropbox/humble_bundle_extra_keys.txt'

alias ctop='([ -z "$(docker container ps -a -q -f "name=ctop\$")" ] && docker container run -it --name ctop -v /etc/localtime:/etc/localtime:ro -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest ) || (docker container start ctop && docker container attach ctop)'
alias ctopi='([ -z "$(docker container ps -a -q -f "name=ctopi\$")" ] && docker container run -it --name ctopi -v /etc/localtime:/etc/localtime:ro -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest -i ) || (docker container start ctopi && docker container attach ctopi)'
alias dce='docker container exec -i -t'
alias dcr='docker container run -i -t'
alias dci='docker container inspect'
alias dcin="dcin(){docker container inspect "\$1" | jq -r '.[].NetworkSettings.Networks.bridge.IPAddress'; unset -f dcin;};dcin"

alias gl='git log --stat'
alias glp='git log -p'
alias gitdc="git diff --cached"
alias gitd="git diff"
alias gitco="git checkout"
[ "$EUID" -ne 0 ] && alias gitcrypt-export='git-crypt export-key -- - | base64 -w 0 | xclip -selection clipboard'
[ "$EUID" -ne 0 ] && alias gitcrypt-decrypt='xclip -out -selection clipboard | base64 -d | git-crypt unlock -'
alias prjup="$HOME/dev/i3wmonarch/scripts/scm/git_push_svn_rebase_work.sh"

[ "$EUID" -ne 0 ] && alias upgrade-drone='sh -c "set -e;export GO111MODULE=on; go install -v github.com/drone/drone/cmd/drone-agent; go install -v github.com/drone/drone/cmd/drone-controller; go install -v github.com/drone/drone/cmd/drone-server;export GO111MODULE=off; go install -v ~/go/src/github.com/drone/drone-cli/drone"'

alias clean-docker="docker system prune && docker volume prune"
[ "$EUID" -ne 0 ] && alias clean-datagrip='find $HOME/.config/JetBrains/DataGrip* -type f -path "*/consoles/db/*" -name "*.sql" | grep -v "keep" | xargs -I{} rm -v "{}"'
#[ "$EUID" -ne 0 ] && alias bw='node /work/dev/github.com/bitwarden/cli/build/bw.js'
[ "$EUID" -ne 0 ] && alias node-docker='mkdir -pv /work/node/home && docker container run -i -t -u node -w /app -v /work/node/home:/home/node -v $PWD:/app node bash'

alias mpv-current='(pgrep mpv | xargs -I{} realpath /proc/{}/fd/6) | tee "$HOME/Desktop/current_mpv_files.txt"'

alias rsyncv='rsync -av --stats --progress'

alias digs='dig +short'

alias ssht='ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

alias curliv='curl -I -v'

